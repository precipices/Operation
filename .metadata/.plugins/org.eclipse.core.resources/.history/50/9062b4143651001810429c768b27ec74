package com.operation.mainframe;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

import com.operation.common.Worker;
import com.operation.manager.ManagerMainFrame;
import com.operation.myComponent.BackButton;
import com.operation.myComponent.BackFrame;
import com.operation.myComponent.BackPane;
import com.operation.rpc.RPCHelper;

public class Login extends BackFrame implements ActionListener {
	JTextField id;
	JTextField password;
	BackButton loginButton;

	public Login() {
		super("手术预约排班系统登陆窗", "./imgs/bg.jpg");
		// 组件
		JLabel jl1 = new JLabel("账号：");
		JLabel jl2 = new JLabel("密码：");
		id = new JTextField(10);
		password = new JPasswordField(10);
		loginButton = new BackButton("登    录");

		// 添加监听器
		loginButton.addActionListener(this);

		// 布局
		BackPane jp1 = new BackPane();
		BackPane jp2 = new BackPane();
		BackPane jp3 = new BackPane();
		jp1.add(jl1);
		jp1.add(id);
		jp2.add(jl2);
		jp2.add(password);
		jp3.add(loginButton);
		BackPane jp = new BackPane();
		jp.setLayout(new BorderLayout());
		jp.add(jp1, BorderLayout.NORTH);
		jp.add(jp2, BorderLayout.CENTER);
		jp.add(jp3, BorderLayout.SOUTH);
		this.setLayout(new FlowLayout());
		this.add(jp);

		this.setBounds(200, 100, 300, 200);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setVisible(true);
	}

	public static void main(String[] args) {
		new Login();
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == loginButton) {
			// 从文本框中得到数据
			String id_Str = id.getText();
			String password_Str = password.getText();
			// 新建RPCHelper
			RPCHelper helper = new RPCHelper();
			int r = helper.login(id_Str, password_Str);
			String message = "test";
			switch (r) {
			case RPCHelper.CONNECT_FAIL:
				message = "服务器连接失败!\nIP和端口号错误或服务器未开启!";
				break;
			case RPCHelper.LOGINED:
				message = "ID[" + id_Str + "]已登陆!";
				break;
			case RPCHelper.ID_NOT_FOUND:
				message = "ID[" + id_Str + "]不存在!";
				break;
			case RPCHelper.PASSWORD_NOT_TRUE:
				message = "密码错误!";
				break;
			case RPCHelper.DOCTOR:
				message = "登陆成功,登陆者是医生";
				break;
			case RPCHelper.ANESTHETIST:
				message = "登陆成功,登陆者是麻醉师";
				break;
			case RPCHelper.NURSE:
				message = "登陆成功,登陆者是护士";
				break;
			case RPCHelper.ADMIN:
				message = "欢迎登陆,尊敬的管理员先生";
				break;
			default:
				message = "未知错误!";
			}
			JOptionPane.showMessageDialog(this, message);
			if (r >= RPCHelper.DOCTOR && r<= RPCHelper.ANESTHETIST) {// 如果成功登陆,则关闭登陆界面,并打开主界面
				this.dispose();
				Worker worker = helper.selectWorkerById(id_Str);
				InitComponent.initClient();
				HelloWindow h=new HelloWindow();
				new MainFrame(helper, worker);
			}else if(r==RPCHelper.ADMIN) {
				this.dispose();
				new ManagerMainFrame(helper);
			}
		}

	}
}
